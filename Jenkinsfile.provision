pipeline {
    agent any

    triggers {
        githubPush()
    }

    stages {

        stage('Terraform Init & Apply') {
            steps {
                dir('terraform') {
                    withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',
                                      credentialsId: 'AWS_Creds']]) {
                        sh '''
                            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
                            export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
                            terraform init -backend-config=backend.hcl
                            terraform apply -auto-approve
                        '''
                    }
                }
            }
        }

        stage('Get EC2 IP') {
            steps {
                dir('terraform') {
                    script {
                        EC2_IP = sh(
                            script: "terraform output -raw public_ip",
                            returnStdout: true
                        ).trim()
                        echo "EC2 IP: ${EC2_IP}"
                        writeFile file: 'EC2_IP.txt', text: EC2_IP
                        env.EC2_IP = EC2_IP
                    }
                }
            }
        }

        stage('Ansible Configure') {
            steps {
                withCredentials([file(credentialsId: 'AWS_SSH_FILE', variable: 'SSH_KEY_FILE')]) {
                    script {
                        ansiblePlaybook(
                            playbook: 'ansible/playbook.yml',
                            inventory: env.EC2_IP + ',',   
                            extras: "-u ec2-user --private-key ${SSH_KEY_FILE}"
                        )
                    }
                }
            }
        }
    }
}
